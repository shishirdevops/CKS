- Enable PodSecurityPolicy in the Kubernetes API server.

- Create a PSP with below conditions:

PSP name : pod-psp

Privilege to run as root on host: false

Allowed volumes to mount on pod: configMap,secret,emptyDir,hostPath

seLinux, runAsUser, supplementalGroups, fsGroup: RunAsAny

- Fix the pod definition /root/pod.yaml based on this PSP and deploy the pod. Ensure that the pod is running after applying the above pod security policy.

Add PodSecurityPolicy admission controller to --enable-admission-plugins list to /etc/kubernetes/manifests/kube-apiserver.yaml It should look like below

    - --enable-admission-plugins=NodeRestriction,PodSecurityPolicy
API server will pickup this config automatically without need of restart

Create PSP as below

cat <<EOF > /root/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: pod-psp
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - configMap
  - secret
  - emptyDir
  - hostPath
EOF

kubectl apply -f /root/psp.yaml 
Update pod definition by making privileged: False and removing capabilities

cat <<EOF > /root/pod.yaml
apiVersion: v1
kind: Pod
metadata:
    name: psp-app
spec:
    containers:
        -
            name: example-app
            image: ubuntu
            command: ["sleep" , "3600"]
            securityContext:
              privileged: False
              runAsUser: 0
    volumes:
    -   name: data-volume
        hostPath:
          path: '/data'
          type: Directory
EOF

kubectl apply -f /root/pod.yaml
